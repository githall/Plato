@model ModeratorIndexViewModel

<card class="card card-body-flush">
    <card-title>
        <h6 class="card-title">@T["Moderators"]</h6>
    </card-title>
    <card-body>
        @if (Model.CategorizedModerators != null)
        {
            @foreach (var user in Model.CategorizedModerators.Keys.OrderBy(u => u.DisplayName))
             {
                 var collapsableId = "user-" + user.Id;
                 <ul class="list-group list-group-flush list-group-hover">
                     <li class="list-group-item list-group-item-action">
                         <div class="dropdown float-right">
                             <a class="btn btn-secondary dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-display="static">
                                 @T["Edit"]
                             </a>
                             <div class="dropdown-menu dropdown-menu-right anim anim-2x anim-scale-in" aria-labelledby="navbarDropdown">
                                 <button type="submit" asp-controller="Admin" asp-route-action="DeleteUser" asp-route-id="@user.Id.ToString()" data-provide="confirm" class="dropdown-item dropdown-item-danger">
                                     @T["Delete Moderator"]
                                 </button>
                             </div>
                         </div>
                         <a role="button" class="btn btn-expand mr-2" title="@T["Channels"]" data-toggle="collapse" href="#@collapsableId" aria-expanded="false" aria-controls="@collapsableId">
                             <i class="fal fa-chevron-right"></i>
                         </a>
                         <h6 class="d-inline-block">
                             <avatar class="avatar avatar-sm mr-2" avatar="@user.Avatar" />
                             @user.DisplayName
                         </h6>
                     </li>
                     <li id="@collapsableId" class="list-group-item collapse p-0">
                         <ul class="list-group list-group-flush list-group-hover">
                             @foreach (var moderator in Model.CategorizedModerators[user])
                             {
                                 <li class="list-group-item list-group-item-action">
                                     @await DisplayAsync(new View("ModeratorListItem", new
                                     {
                                         moderator = moderator
                                     }))
                                 </li>
                             }
                         </ul>
                     </li>
                 </ul>
             }
        }
        else
        {
            <ul class="list-group list-group-flush list-group-hover">
                <li class="list-group-item">
                    @T["No moderators found"]
                </li>
            </ul>
        }
    </card-body>
</card>

<script section="Footer">
    $(document).ready(function () {
        $(".btn-expand").click(function () {
            if ($(this).hasClass("active")) {
                $(this).removeClass("active");
            } else {
                $(this).addClass("active");
            }
        });
    });
</script>

