@model EntityListItemViewModel<Entity>

@if (@Model.Entity.Relevance > 0)
{
    <span class="text-muted float-right" data-toggle="tooltip" title="@T["Relevance"]">@Model.Entity.Relevance%</span>
}

<a asp-route-area="@Model.Entity.ModuleId" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" class="font-weight-bold">
    @Html.Raw(Model.Entity.Title.HighlightTerms(Model.Options.Search))
</a>
@if (Model.Entity.IsPinned)
{
    <span title="@T["This content is pinned and is probably important"]" data-toggle="tooltip" class="d-inline-block mx-1">
        <i class="fal fa-thumbtack"></i>
    </span>
}
@if (Model.Entity.IsLocked)
{
    <span title="@T["This content is locked and is not accepting new replies"]" data-toggle="tooltip" class="d-inline-block mx-1">
        <i class="fal fa-lock"></i>
    </span>
}

<div class="text-muted">
    @Html.Raw(Model.Entity.Abstract.HighlightTerms(Model.Options.Search))
</div>
<div>

    <ul class="list-inline">
        @if (Model.Entity.CreatedUserId > 0)
        {
            <li class="list-inline-item">
                <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.CreatedUserId" asp-route-opts.alias="@Model.Entity.CreatedBy.Alias">@Model.Entity.CreatedBy.DisplayName</a>
            </li>
        }
        <li class="list-inline-item">
            <date utc="@Model.Entity.CreatedDate" />
        </li>
        @if (Model.Entity.IsPrivate)
        {
            <li class="list-inline-item">
                @if (Model.Entity.CreatedUserId == base.CurrentUser?.Id)
                {
                    <span class="badge badge-warning" data-toggle="tooltip" title="@T["This contribution is private and only visible as you are the author"]">@T["Private"]</span>
                }
                else
                {
                    <span class="badge badge-warning" data-toggle="tooltip" title="@T["This contribution is private and only visible as you have permission to view private contributions"]">@T["Private"]</span>
                }
            </li>
        }
        @if (Model.Entity.IsHidden)
        {
            <li class="list-inline-item">
                <span class="badge badge-primary" data-toggle="tooltip" title="@T["This contribution is hidden and only visible as you have permission to view hidden contributions"]">@T["Hidden"]</span>
            </li>
        }
        @if (Model.Entity.IsSpam)
        {
            <li class="list-inline-item">
                <span class="badge badge-info" data-toggle="tooltip" title="@T["This contribution has been flagged as SPAM and is only visible as you have permission to view contributions flagged as SPAM"]">@T["SPAM"]</span>
            </li>
        }
        @if (Model.Entity.IsDeleted)
        {
            <li class="list-inline-item">
                <span class="badge badge-danger" data-toggle="tooltip" title="@T["This contribution has been deleted and is only visible as you have permission to view deleted contributions"]">@T["Deleted"]</span>
            </li>
        }
    </ul>

</div>


