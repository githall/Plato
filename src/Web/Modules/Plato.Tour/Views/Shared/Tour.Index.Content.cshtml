@using  Microsoft.AspNetCore.Routing
@model TourIndexViewModel
@{
    var isAdmin = false;
    if (CurrentUser != null)
    {
        if (CurrentUser.RoleNames != null)
        {
            foreach (var roleName in CurrentUser.RoleNames)
            {
                if (roleName.Equals(DefaultRoles.Administrator, StringComparison.OrdinalIgnoreCase))
                {
                    isAdmin = true;
                    break;
                }
            }
        }
    }
}

@if (CurrentUser == null)
{
    var returnUrl = GetRouteUrl(new RouteValueDictionary()
    {
        ["area"] = "Plato.Admin",
        ["controller"] = "Admin",
        ["action"] = "Index"
    });
    <card>
        <card-title>
            <h6 class="card-title">@T["Welcome to Plato"]</h6>
        </card-title>
        <card-body>
            @T["To get started use the button below to login with the administrator username & password you provided during setup. Once logged in you will be presented with the setup assistant. The setup assistant will walk you through a few simple steps to help you further configure & customize your new support site."]
            <br /><br />
            @T["For support please visit the Plato"] <a href="https://plato.instantasp.co.uk/support" target="_blank">support site</a> @T["to browse documentation, ask questions, suggest features or report issues. We will always assist with questions or issues posted within our support site. We hope you enjoy using Plato and find it useful for your business."]
            <br /><br />
            <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Login" asp-route-returnUrl="@returnUrl" class="btn btn-primary" data-provide="loader-spy" data-loader-mode="disable">
                @T["Login"]<i class="fal fa-arrow-right ml-2"></i>
            </a>
        </card-body>
    </card>
}
else
{
    var percentComplete = Model.CompletedSteps.ToPercentageOf(Model.TotalSteps);
    if (isAdmin)
    {
        var returnUrl = Context.Request.PathBase + Context.Request.Path;
        <form asp-route-action="Index" method="post" enctype="multipart/form-data" data-disable-submit="true">
            <div class="card card-body-flush">
                <div class="card-header">
                    @if (percentComplete < 100)
                    {
                        <a asp-route-area="Plato.Tour" asp-route-controller="Admin" asp-route-action="FinishSetUp" asp-route-returnUrl="@returnUrl" data-provide="dialog" data-dialog-id="shareDialog" data-dialog-css="modal-dialog modal-lg" class="btn btn-secondary float-right">
                            @T["Finish Setup"]
                        </a>
                        <h6 class="card-title">@T["Let's get you started"]</h6>
                        @T["Click the steps below to setup your site. Once done click the \"Finish Setup\" button to hide this setup assistant."]
                    }
                    else
                    {
                        <a asp-route-area="Plato.Tour" asp-route-controller="Admin" asp-route-action="FinishSetUp" asp-route-returnUrl="@returnUrl" data-provide="dialog" data-dialog-id="shareDialog" data-dialog-css="modal-dialog modal-lg" class="btn btn-primary float-right">
                            @T["Finish Setup"]
                        </a>
                        <h6 class="card-title text-success">
                            <i class="fal fa-check mr-1"></i>
                            @T["Setup is complete"]
                        </h6>
                        @T["You've completed all initial setup steps. Use the \"Finish Setup\" button to permanently hide this setup assistant."]
                    }
                </div>
                <div class="card-body">

                    @if (Model.Steps != null)
                    {
                        var count = 0;
                        <div class="accordion mb-0" id="accordionExample">
                            @foreach (var step in Model.Steps)
                            {
                                count++;
                                var headerId = "header" + count;
                                var collapseId = "step" + count;
                                var css = step.CompletedDate.HasValue
                                    ? "img-48 text-center d-inline-block bg-success text-white"
                                    : "img-48 text-center d-inline-block bg-primary-25 text-white";
                                <div class="list-group list-group-flush">
                                    <a href="#@collapseId" data-toggle="collapse" aria-expanded="false" aria-controls="@collapseId" class="list-group-item list-group-item-action" id="@headerId">
                                        <span class="list-left list-left-md">
                                            <span class="@css">
                                                <h3 class="pt-1">@count</h3>
                                            </span>
                                        </span>
                                        <span class="list-body">
                                            @if (step.CompletedDate.HasValue)
                                            {
                                                <span class="text-success float-right mt-2">
                                                    <i class="fal fa-check align-middle mr-2"></i>@T["Completed "]
                                                </span>
                                            }
                                            else
                                            {
                                                <i class="fal fa-arrow-right mt-2 float-right"></i>
                                            }
                                            <h6>@T[step.Title]</h6>
                                            @T[step.Description]                                    
                                        </span>
                                    </a>
                                    <div id="@collapseId" class="collapse" aria-labelledby="@headerId" data-parent="#accordionExample">
                                        @await DisplayAsync(new View(step.Id, step))
                                    </div>
                                </div>
                            }
                        </div>
                    }

                </div>
            </div>
        </form>
    }
}