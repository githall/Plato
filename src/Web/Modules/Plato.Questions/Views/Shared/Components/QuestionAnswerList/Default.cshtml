@using Plato.Entities.Extensions
@using Plato.Questions
@model EntityViewModel<Question, Answer>
@{
    var answerText = T["answer"];
    var answersText = T["answers"];
    var replyPermission = Permissions.PostAnswers;
}

@if (Model.Replies != null)
{
    var offset = Model.Pager.Offset;
    var rowOffset = Model.Pager.RowOffset;
    var title = Model.Pager.Total == 1
        ? $"{Model.Pager.Total.ToPrettyInt()} {answerText.Value}"
        : $"{Model.Pager.Total.ToPrettyInt()} {answersText.Value}";
  
    <h6 asp-id="title">@title, @Model.Entity.TotalAnswers @T["accepted"]</h6>
    <hr/>

    <div  asp-id="infinite-scroll"
         data-provide="infiniteScroll"
         data-infinite-scroll-url="@Model.Pager.Url"
         data-infinite-scroll-offset="@offset"
         data-infinite-scroll-row-offset="@rowOffset"
         data-infinite-scroll-page="@Model.Pager.Page"
         data-infinite-scroll-total-pages="@Model.Pager.TotalPages"
         class="infinite-scroll">
        <div class="infinite-scroll-loader" data-type="previous"></div>
        @foreach (var answer in Model.Replies.Data)
        {
            answer.RowOffset = rowOffset;
            answer.Offset = offset;
            @await DisplayAsync(new View("QuestionAnswerListItem", new
            {
                model = new EntityReplyListItemViewModel<Question, Answer>()
                {
                    Entity = Model.Entity,
                    Reply = answer,
                }
            }))
            {
                rowOffset++;
            }
        }
        <div class="infinite-scroll-loader" data-type="next"></div>
    </div>

    @if (!Model.Entity.IsHidden() && !Model.Entity.IsLocked)
     {
         <div asp-id="participate">
             <card>
                 <card-body>
                     <div class="text-muted">
                         <authorize asp-permission="@replyPermission.Name">
                             <authorize-success>
                                 <i class="fal fa-reply mr-2"></i>
                                 <a href="#" data-provide="postReply">@T["Post an answer"]</a>
                             </authorize-success>
                             <authorize-fail>
                                 @if (base.CurrentUser == null)
                                 {
                                     <i class="fal fa-bullhorn mr-2"></i>
                                     @T["Have an answer?"]
                                     <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Login" asp-route-returnUrl="@Context.Request.Path">@T["Login"]</a>
                                     @T["or"]
                                     <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Register" asp-route-returnUrl="@Context.Request.Path">@T["register"]</a>
                                     @T["to post your answer"]
                                 }
                                 else
                                 {
                                     <i class="fal fa-lock mr-2"></i>
                                     @T["You don't have permission to post replies"]
                                 }
                             </authorize-fail>
                         </authorize>
                     </div>
                 </card-body>
             </card>
         </div>
     }
}
else
{
    @if (!Model.Entity.IsHidden() && !Model.Entity.IsLocked)
     {
         <div  asp-id="participate">
             <card>
                 <card-body>
                     <div class="text-muted">
                         <authorize asp-permission="@replyPermission.Name">
                             <authorize-success>
                                 <i class="fal fa-reply mr-2"></i>
                                 @T["No answers have been posted yet."]
                                 <a href="#" data-provide="postReply">@T["Post your answer"]</a>
                             </authorize-success>
                             <authorize-fail>
                                 @if (base.CurrentUser == null)
                                 {
                                     <i class="fal fa-bullhorn mr-2"></i>
                                     @T["Have something to say?"]
                                     <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Login" asp-route-returnUrl="@Context.Request.Path">@T["Login"]</a>
                                     @T["or"]
                                     <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Register" asp-route-returnUrl="@Context.Request.Path">@T["register"]</a>
                                     @T["to post your answer"]
                                 }
                                 else
                                 {
                                     <i class="fal fa-lock mr-2"></i>
                                     @T["You don't have permission to post answers"]
                                 }
                             </authorize-fail>
                         </authorize>
                     </div>
                 </card-body>
             </card>
         </div>
     }
}

@if (Model.Pager.Enabled)
{
    <div asp-id="pager">
        <pager model="@Model.Pager"></pager>
    </div>
}
