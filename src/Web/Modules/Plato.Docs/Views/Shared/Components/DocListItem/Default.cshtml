@model EntityListItemViewModel<Doc>
@{
    var details = Model.Entity.GetOrCreate<DocDetails>();
}

<div asp-id="header">
    <div class="float-right text-right">
        <ol asp-id="icons" class="list-inline text-muted">
            @if (Model.Entity.TotalReplies > 0)
            {
                <li class="list-inline-item">
                    <span title="@T["Comments"]" data-toggle="tooltip">
                        @Model.Entity.TotalReplies.ToPrettyInt() <i class="fal fa-comment-alt-lines"></i>
                    </span>
                </li>
            }
            @if (Model.Entity.TotalViews > 0)
            {
                <li class="list-inline-item">
                    <span title="@T["Views"]" data-toggle="tooltip">
                        @Model.Entity.TotalViews.ToPrettyInt() <i class="fal fa-eye"></i>
                    </span>
                </li>
            }
        </ol>
    </div>
    <a asp-id="title" asp-route-area="Plato.Docs" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" class="font-weight-bold">@Model.Entity.Title</a>
    @if (Model.Entity.IsPinned)
    {
        <span title="@T["This doc is pinned and is probably important"]" data-toggle="tooltip" class="d-inline-block mx-1">
            <i class="fal fa-thumbtack"></i>
        </span>
    }
    @if (Model.Entity.IsLocked)
    {
        <span title="@T["This doc is locked and is not accepting new comments"]" data-toggle="tooltip" class="d-inline-block mx-1">
            <i class="fal fa-lock"></i>
        </span>
    }
    @if (Model.Labels != null)
    {
        <span class="pl-2">
            @foreach (var label in Model.Labels)
            {
                <a asp-route-area="Plato.Docs.Labels" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.labelId="@label.Id" asp-route-opts.alias="@label.Alias" title="@label.Description" class="btn btn-xs label font-weight-bold" style="background-color: @label.BackColor; color: @label.ForeColor">
                    @label.Name
                </a>
            }
        </span>
    }
</div>
<div asp-id="abstract" class="text-muted">
    @Model.Entity.Abstract
</div>
<div asp-id="details">

    <ul class="list-inline float-right">
        @if (Model.Entity.LastReplyDate != null)
        {
            <li class="list-inline-item">
                <a asp-route-area="Plato.Docs" asp-route-controller="Home" asp-route-action="Reply" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" asp-route-opts.replyId="@Model.Entity.LastReplyId" class="@Model.Entity.LastReplyBy.Css.StaffCss">
                    <date utc="@Model.Entity.LastReplyDate"></date>
                </a>
            </li>
        }
        @if (details?.LatestUsers != null)
        {
            <li class="list-inline-item">
                <div class="avatar-group">
                    @foreach (var user in details.LatestUsers)
                    {
                        var replies = user.TotalReplies == 1
                            ? "comment"
                            : "comments";
                        <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@user.Id" asp-route-opts.alias="@user.Alias"><avatar data-toggle="tooltip" title="@user.DisplayName - @user.TotalReplies.ToPrettyInt() @T[replies]" class="avatar avatar-sm" avatar="@user.Avatar"/></a>
                    }
                </div>
            </li>
        }

    </ul>

    <ul class="list-inline">
        @if (@Model.Category != null)
        {
            <li class="list-inline-item">
                <span>@T["In"]</span>
                <a asp-route-area="Plato.Docs.Categories" asp-route-controller="Home" asp-route-action="Index" asp-route-opts.categoryId="@Model.Category.Id" asp-route-opts.alias="@Model.Category.Alias">
                    @Model.Category.Name
                </a>
            </li>
        }
        @if (Model.Entity.ModifiedDate != null)
        {
            <li class="list-inline-item">
                <date utc="@Model.Entity.ModifiedDate"/>
            </li>
        }
        else
        {
            <li class="list-inline-item">
                <date utc="@Model.Entity.CreatedDate"/>
            </li>
        }
        @if (Model.Tags != null)
        {
            <li class="list-inline-item">
                @foreach (var tag in Model.Tags)
                {
                    <a asp-route-area="Plato.Docs.Tags" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.tagId="@tag.Id" asp-route-opts.alias="@tag.Alias" title="@tag.Description" class="btn btn-xs label font-weight-bold">
                        @tag.Name
                    </a>
                }
            </li>
        }
        @if (Model.Entity.IsPrivate)
        {
            <li class="list-inline-item">
                @if (Model.Entity.CreatedUserId == base.CurrentUser?.Id)
                {
                    <span class="badge badge-warning" data-toggle="tooltip" title="@T["This doc is private and only visible as you are the doc author"]">@T["Private"]</span>
                }
                else
                {
                    <span class="badge badge-warning" data-toggle="tooltip" title="@T["This doc is private and only visible as you have permission to view private docs"]">@T["Private"]</span>
                }
            </li>
        }
        @if (Model.Entity.IsHidden)
        {
            <li class="list-inline-item">
                <span class="badge badge-primary" data-toggle="tooltip" title="@T["This doc is hidden and only visible as you have permission to view hidden docs"]">@T["Hidden"]</span>
            </li>
        }
        @if (Model.Entity.IsSpam)
        {
            <li class="list-inline-item">
                <span class="badge badge-info" data-toggle="tooltip" title="@T["This doc has been flagged as SPAM and is only visible as you have permission to view docs flagged as SPAM"]">@T["SPAM"]</span>
            </li>
        }
        @if (Model.Entity.IsDeleted)
        {
            <li class="list-inline-item">
                <span class="badge badge-danger" data-toggle="tooltip" title="@T["This doc has been deleted and is only visible as you have permission to view deleted docs"]">@T["Deleted"]</span>
            </li>
        }
    </ul>
</div>

