@model ExternalLoginViewModel

<div class="layout">

    <div class="layout-header">
        <div class="layout-header-container">
            <div class="row">
                <div class="col-md-6">
                    @if (Model.IsExistingUser)
                    {
                        <h4>@T["Link Account"]</h4>
                        <span class="text-muted">
                            @T["You've successfully authenticated with"] <strong>@ViewData["LoginProvider"]</strong>.
                            @T["You already have an account with this email address. Enter your local account password and click the \"Register\" button to link the accounts and finish logging in."]
                        </span>
                    }
                    else
                    {
                        <h4>@T["Register"]</h4>
                        <span class="text-muted">
                            @T["You've successfully authenticated with"] <strong>@ViewData["LoginProvider"]</strong>.
                            @T["Please enter an email address and password for this site below and click the \"Register\" button to finish logging in."]
                        </span>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="layout-body">
        <div class="layout-content">
            <div class="row">
                <div class="col-md-6">
                    <form asp-controller="Account" asp-action="ExternalLoginConfirmation" asp-route-returnurl="@ViewData["ReturnUrl"]" asp-route-loginprovider="@ViewData["LoginProvider"]" method="post" class="form-horizontal">

                        <div asp-validation-summary="All" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="UserName" class="col-form-label font-weight-bold">@T["Username"]</label>
                            <span asp-validation-for="UserName" class="text-danger"></span>
                            <input asp-for="UserName" class="form-control" autofocus disabled="@Model.IsExistingUser" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Email" class="col-form-label font-weight-bold">@T["Email"]</label>
                            <span asp-validation-for="Email" class="text-danger"></span>
                            <input asp-for="Email" class="form-control" disabled="@Model.IsExistingUser" />
                        </div>
                        <div class="form-group">
                            <label asp-for="Password" class="col-form-label font-weight-bold">@T["Password"]</label>
                            <span asp-validation-for="Password" class="text-danger"></span>
                            <input asp-for="Password" class="form-control" />
                        </div>
                        @Html.HiddenFor(m => m.IsExistingUser)
                        @if (!Model.IsExistingUser)
                        {
                            <div class="form-group">
                                <label asp-for="ConfirmPassword" class="col-form-label font-weight-bold">@T["Confirm password"]</label>
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                <input asp-for="ConfirmPassword" class="form-control" />
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(m => m.UserName)
                            @Html.HiddenFor(m => m.Email)
                        }
                        <div class="form-group">                            
                            <button type="submit" class="btn btn-lg btn-primary btn-block">@T["Register"]</button>                            
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


