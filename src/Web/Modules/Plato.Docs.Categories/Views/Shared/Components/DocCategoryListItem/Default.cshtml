@model CategoryListItemViewModel<Category>
@{
    var details = Model.Category.GetOrCreate<CategoryDetails>();
    var childBgColor = !String.IsNullOrEmpty(Model.Category.BackColor) ? Model.Category.BackColor : "auto";
    var childForeColor = !String.IsNullOrEmpty(Model.Category.ForeColor) ? Model.Category.ForeColor : "auto";
    var buttonText = details.TotalEntities == 1
        ? "doc"
        : "docs";
}

<a asp-route-area="Plato.Docs.Categories" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.categoryId="@Model.Category.Id" asp-route-opts.alias="@Model.Category.Alias" class="list-group-item-action d-block p-3 text-center">
    <div class="p-3">
        @if (!String.IsNullOrEmpty(Model.Category.IconCss))
        {
            <div class="icon-wrapper icon-wrapper-lg" style="background-color: @childBgColor; color: @childForeColor">
                <i class="@Model.Category.IconCss"></i>
            </div>
        }
        else
        {
            <div class="icon-wrapper icon-wrapper-lg">
                <i class="fal fa-folder"></i>
            </div>
        }
        <h6 class="d-block mt-2">
            @Model.Category.Name
        </h6>

        <div class="btn btn-secondary">
            @details.TotalEntities.ToPrettyInt() @T[buttonText]
        </div>

    </div>
</a>

