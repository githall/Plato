@model EntityAttachmentOptions
@{
    var settings = GetOptions<AttachmentSettings>();
    var allowedExtensions = settings.GetAllowedExtensions(CurrentUser);
    var availableSpace = settings.GetAvailableSpace(CurrentUser);
    var maxFileSize = settings.GetMaxFileSize(CurrentUser);
    var uploadUrl = GetRouteUrl(new RouteValueDictionary()
    {
        ["area"] = "Plato.Attachments",
        ["controller"] = "streaming",
        ["action"] = "upload",
        ["guid"] = Model.Guid,
        ["featureId"] = Model.FeatureId
    });
    var editUrl = GetRouteUrl(new RouteValueDictionary()
    {
        ["area"] = "Plato.Entities.Attachments",
        ["controller"] = "Home",
        ["action"] = "Index",
        ["opts.guid"] = Model.Guid,
        ["opts.entityId"] = Model.EntityId
    });
    var previewUrl = GetRouteUrl(new RouteValueDictionary()
    {
        ["area"] = "Plato.Entities.Attachments",
        ["controller"] = "Home",
        ["action"] = "Preview",
        ["opts.guid"] = Model.Guid,
        ["opts.entityId"] = Model.EntityId
    });
}

<input type="text" name="@Model.GuidHtmlName" asp-for="Guid" />

<p>
    @allowedExtensions?.ToDelimitedString()?.Replace(",", ", ")
</p>
<p>
    <strong>Available Space</strong>
    @availableSpace.ToFriendlyFileSize()
</p>
<p>
    <strong>Max File Size</strong>
    @maxFileSize.ToFriendlyFileSize()
</p>
<div class="card card-body-flush" data-provide="attachments">
    <div class="card-header p-0 dropdown list-group-flush">
        <a href="#" class="list-group-item list-group-item-action dropdown-toggle dropdown-toggle-no-caret font-weight-bold" id="attachmentDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" data-display="static">
            <i class="fal fa-cog float-right"></i>
            @T["Attachments"]
        </a>
        <div class="dropdown-menu dropdown-menu-right anim anim-2x anim-scale-in p-0 min-w-500" aria-labelledby="attachmentDropdown">
            <div class="list-group list-group-flush list-group-hover">
                <div class="list-group-item list-group-item-dropzone">
                    <div class="dropzone"
                         data-dropzone-url="@uploadUrl"
                         data-progress-preview="#progress"
                         data-provide="attachment-dropzone"></div>
                </div>
            </div>
            <div class="max-h-300 overflow-auto">                
                <div data-http-url="@editUrl" data-provide="http-content">
                    <p class="text-center"><i class="fal fa-spinner fa-spin"></i></p>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div id="progress"></div>
        <div id="preview" data-http-url="@previewUrl" data-http-defer="true" data-provide="http-content">
            @await DisplayAsync(new View("PreviewEntityAttachments", new
            {
                Model
            }))
        </div>
    </div>
</div>