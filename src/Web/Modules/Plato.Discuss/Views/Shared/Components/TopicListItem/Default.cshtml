@model EntityListItemViewModel<Topic>
@{
    var details = Model.Entity.GetOrCreate<TopicDetails>();    
}
                                                                   
<div asp-id="list-left" class="list-left">
    <a asp-id="avatar" asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.CreatedUserId" asp-route-opts.alias="@Model.Entity.CreatedBy.Alias">
        <avatar data-toggle="tooltip" title="@Model.Entity.CreatedBy.DisplayName" class="avatar" avatar="@Model.Entity.CreatedBy.Avatar"/>
    </a>
</div>
<div asp-id="list-body" class="list-body">

    <ol asp-id="icons" class="list-inline text-muted float-right text-right">
        @if (Model.Tags != null)
        {
            var sb = new System.Text.StringBuilder();
            var tagList = Model.Tags.ToList();
            if (tagList.Count > 0)
            {
                sb.Append(T["Tags:"].Value).Append(" ");
                for (var i = 0; i < tagList.Count; i++)
                {
                    sb.Append(tagList[i].Name);
                    if (i < tagList.Count - 1)
                    {
                        sb.Append(", ");
                    }
                }
            }
            <li class="list-inline-item">
                <span title="@sb.ToString()" data-toggle="tooltip">
                    @tagList.Count.ToPrettyInt() <i class="fal fa-tag"></i>
                </span>
            </li>
        }
        @if (Model.Entity.TotalReplies > 0)
        {
            <li class="list-inline-item">
                <span title="@T["Replies"]" data-toggle="tooltip">
                    @Model.Entity.TotalReplies.ToPrettyInt() <i class="fal fa-comment-alt-lines"></i>
                </span>
            </li>
        }
        @if (Model.Entity.TotalViews > 0)
        {
            <li class="list-inline-item">
                <span title="@T["Views"]" data-toggle="tooltip">
                    @Model.Entity.TotalViews.ToPrettyInt() <i class="fal fa-eye"></i>
                </span>
            </li>
        }
    </ol>

    <a asp-id="title" asp-route-area="Plato.Discuss" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" class="font-weight-bold" title="@Model.Entity.Title">@Model.Entity.Title.TrimToAround(75)</a>
   
    @if (Model.Entity.IsPinned)
    {
        <span title="@T["This topic is pinned and is probably important"]" data-toggle="tooltip" class="d-inline-block mx-1">
            <i class="fal fa-thumbtack"></i>
        </span>
    }
    @if (Model.Entity.IsLocked)
    {
        <span title="@T["This topic is locked and is not accepting new replies"]" data-toggle="tooltip" class="d-inline-block mx-1">
            <i class="fal fa-lock"></i>
        </span>
    }
    @if (Model.Labels != null)
    {
        <span class="pl-2">
            @foreach (var label in Model.Labels)
            {
                <a asp-route-area="Plato.Discuss.Labels" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.labelId="@label.Id" asp-route-opts.alias="@label.Alias" title="@label.Description" class="btn btn-xs label font-weight-bold" style="background-color: @label.BackColor; color: @label.ForeColor">
                    @label.Name
                </a>
            }
        </span>
    }
    <div asp-id="abstract" class="text-muted">
        @Model.Entity.Abstract
    </div>
    <div asp-id="details">

        @if (details?.LatestUsers != null)
        {
            <div class="avatar-group float-right ml-2">
                @foreach (var user in details.LatestUsers)
                {
                    var replies = user.TotalReplies == 1
                        ? "reply"
                        : "replies";
                    <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@user.Id" asp-route-opts.alias="@user.Alias"><avatar data-toggle="tooltip" title="@user.DisplayName - @user.TotalReplies.ToPrettyInt() @T[replies]" class="avatar avatar-sm" avatar="@user.Avatar" /></a>
                }
            </div>
        }

        @if (Model.Entity.LastReplyDate != null)
        {
            <div class="float-right">
                <a asp-route-area="Plato.Discuss" asp-route-controller="Home" asp-route-action="Reply" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" asp-route-opts.replyId="@Model.Entity.LastReplyId" class="@Model.Entity.LastReplyBy.Css.StaffCss">
                    <date utc="@Model.Entity.LastReplyDate"></date>
                </a>
            </div>
        }

        <date utc="@Model.Entity.CreatedDate" data-toggle="tooltip" class="@Model.Entity.CreatedBy?.Css.StaffCss" />
        @if (@Model.Category != null)
        {
            <span>@T["In"]</span>
            <a asp-route-area="Plato.Discuss.Categories" asp-route-controller="Home" asp-route-action="Index" asp-route-opts.categoryId="@Model.Category.Id" asp-route-opts.alias="@Model.Category.Alias">
                @Model.Category.Name
            </a>
        }
        @if (Model.Entity.IsPrivate)
        {
            if (Model.Entity.CreatedUserId == base.CurrentUser.Id)
            {
                <span class="badge badge-warning" data-toggle="tooltip" title="@T["This topic is private and only visible as you are the topic author"]">@T["Private"]</span>
            }
            else
            {
                <span class="badge badge-warning" data-toggle="tooltip" title="@T["This topic is private and only visible as you have permission to view private topics"]">@T["Private"]</span>
            }
        }
        @if (Model.Entity.IsHidden)
        {
            <span class="badge badge-primary" data-toggle="tooltip" title="@T["This topic is hidden and only visible as you have permission to view hidden topics"]">@T["Hidden"]</span>
        }
        @if (Model.Entity.IsSpam)
        {
            <span class="badge badge-info" data-toggle="tooltip" title="@T["This topic has been flagged as SPAM and is only visible as you have permission to view topics flagged as SPAM"]">@T["SPAM"]</span>
        }
        @if (Model.Entity.IsDeleted)
        {
            <span class="badge badge-danger" data-toggle="tooltip" title="@T["This topic has been deleted and is only visible as you have permission to view deleted topics"]">@T["Deleted"]</span>
        }
    </div>

</div>
