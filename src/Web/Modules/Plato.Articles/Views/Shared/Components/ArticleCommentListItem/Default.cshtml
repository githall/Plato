@using Microsoft.AspNetCore.Routing
@model EntityReplyListItemViewModel<Article, Comment>
@{
    var css = Model.Reply.RowOffset == Model.Reply.Offset
        ? "infinite-scroll-item infinite-scroll-item-active"
        : "infinite-scroll-item";
    var quoteId = "quote" + Model.Reply.Id;
    var replyUrl = Url.Action("Reply", "Home", new RouteValueDictionary()
    {
        ["opts.id"] = Model.Entity.Id,
        ["opts.alias"] = Model.Entity.Alias,
        ["opts.replyId"] = Model.Reply.Id
    });
}

<div asp-id="list-row" class="list-row">
    <div asp-id="list-left" class="list-left reply-left">
        <a asp-id="avatar" asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Reply.CreatedUserId" asp-route-opts.alias="@Model.Reply.CreatedBy.Alias" class="avatar-link" data-provide="popper" data-popper-url="@GetRouteUrl(Model.Reply.CreatedBy.Urls.GetProfileRoute)" data-popper-position="bottom">
            <avatar class="avatar" avatar="@Model.Reply.CreatedBy.Avatar" />
        </a>
        <navigation name="article-comment-details"
                    model="Model.Reply"
                    class="list-inline p-0" />
    </div>
    <div asp-id="list-body" class="list-body reply-body">
        <card asp-id="card" class="card card-body-flush">
            <card-title>
                <div data-infinite-scroll-offset="@Model.Reply.RowOffset">
                    <div asp-id="title" class="card-title float-left">
                        <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Reply.CreatedUserId" asp-route-opts.alias="@Model.Reply.CreatedBy.Alias" class="@Model.Reply.CreatedBy?.Css.StaffCss" data-provide="popper" data-popper-url="@GetRouteUrl(Model.Reply.CreatedBy.Urls.GetProfileRoute)" data-popper-position="bottom">@Model.Reply.CreatedBy.DisplayName</a>
                        @T["posted "]
                        <span data-toggle="tooltip" title="@Model.Reply.CreatedDate">
                            @Model.Reply.CreatedDate.ToPrettyDate()
                        </span>
                        @if (Model.Reply.IsSpam)
                        {
                            <span class="badge badge-info" data-toggle="tooltip" title="@T["This reply has been flagged as SPAM and is only visible as you have permission to view comments flagged as SPAM"]">@T["SPAM"]</span>
                        }
                        @if (Model.Reply.IsHidden)
                        {
                            <span data-toggle="tooltip" title="@T["This comment is hidden and only visible as you have permission to view hidden comments"]" class="badge badge-primary">@T["Hidden"]</span>
                        }
                        @if (Model.Reply.IsDeleted)
                        {
                            <span class="badge badge-danger" data-toggle="tooltip" title="@T["This reply has been deleted and is only visible as you have permission to view deleted comments"]">@T["Deleted"]</span>
                        }
                        @if (Model.Reply.IsClosed)
                        {
                            <span class="badge badge-success">
                                @T["Closed"]
                            </span>
                        }
                    </div>
                    <navigation name="article-comment"
                                model="Model.Reply"
                                class="nav navbar p-0 float-right"
                                arrow-css="dropdown-arrow"
                                child-ul-css-class="dropdown-menu dropdown-menu-right anim anim-2x anim-scale-in" />
                </div>
            </card-title>
            <card-body>
                <div class="@css" data-infinite-scroll-highlight="@Model.Reply.RowOffset">
                    <div asp-id="body" class="markdown-body p-3" data-provide="markdownBody">
                        @Html.Raw(@Model.Reply.Html)
                        @if (!String.IsNullOrEmpty(Model.Reply.CreatedBy.SignatureHtml))
                        {
                            <div asp-id="signature">
                                @Html.Raw(@Model.Reply.CreatedBy.SignatureHtml)
                            </div>
                        }
                    </div>
                    <navigation name="article-comment-footer"
                                model="Model.Reply"
                                enable-list="false" />
                </div>
                <div class="hidden"
                     id="@quoteId"
                     data-reply-url="@replyUrl"
                     data-display-name="@Model.Reply.CreatedBy.DisplayName">@Model.Reply.Message</div>
            </card-body>
        </card>
    </div>
</div>